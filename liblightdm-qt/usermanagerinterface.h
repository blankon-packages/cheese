/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp ../src/user-manager.xml -i ldmuser.h -c UserManagerInterface -p usermanagerinterface
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef USERMANAGERINTERFACE_H_1291852876
#define USERMANAGERINTERFACE_H_1291852876

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "ldmuser.h"

/*
 * Proxy class for interface org.lightdm.LightDisplayManager.Users
 */
class UserManagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.lightdm.LightDisplayManager.Users"; }

public:
    UserManagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~UserManagerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString, QString, QString> GetUserDefaults(const QString &username)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(username);
        return asyncCallWithArgumentList(QLatin1String("GetUserDefaults"), argumentList);
    }
    inline QDBusReply<QString> GetUserDefaults(const QString &username, QString &layout, QString &session)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(username);
        QDBusMessage reply = callWithArgumentList(QDBus::Block, QLatin1String("GetUserDefaults"), argumentList);
        if (reply.type() == QDBusMessage::ReplyMessage && reply.arguments().count() == 3) {
            layout = qdbus_cast<QString>(reply.arguments().at(1));
            session = qdbus_cast<QString>(reply.arguments().at(2));
        }
        return reply;
    }

    inline QDBusPendingReply<QList<LdmUser> > GetUsers()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetUsers"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace lightdm {
    namespace LightDisplayManager {
      typedef ::UserManagerInterface Users;
    }
  }
}
#endif
